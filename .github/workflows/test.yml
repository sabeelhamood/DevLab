name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: devlab_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Run linting
      working-directory: ./backend
      run: npm run lint
    
    - name: Run unit tests
      working-directory: ./backend
      run: npm run test:unit -- --coverage --watchAll=false
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USER: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_NAME: devlab_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret-key
        AUTH_SERVICE_URL: http://localhost:3001
        DIRECTORY_SERVICE_URL: http://localhost:3002
        GEMINI_API_KEY: test-gemini-key
        SANDBOX_API_URL: http://localhost:3004
    
    - name: Run integration tests
      working-directory: ./backend
      run: npm run test:integration -- --watchAll=false
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USER: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_NAME: devlab_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret-key
        AUTH_SERVICE_URL: http://localhost:3001
        DIRECTORY_SERVICE_URL: http://localhost:3002
        GEMINI_API_KEY: test-gemini-key
        SANDBOX_API_URL: http://localhost:3004
    
    - name: Run E2E tests
      working-directory: ./backend
      run: npm run test:e2e -- --watchAll=false
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USER: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_NAME: devlab_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret-key
        AUTH_SERVICE_URL: http://localhost:3001
        DIRECTORY_SERVICE_URL: http://localhost:3002
        GEMINI_API_KEY: test-gemini-key
        SANDBOX_API_URL: http://localhost:3004
    
    - name: Run performance tests
      working-directory: ./backend
      run: npm run test:performance -- --watchAll=false
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USER: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_NAME: devlab_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret-key
        AUTH_SERVICE_URL: http://localhost:3001
        DIRECTORY_SERVICE_URL: http://localhost:3002
        GEMINI_API_KEY: test-gemini-key
        SANDBOX_API_URL: http://localhost:3004
    
    - name: Run security tests
      working-directory: ./backend
      run: npm run test:security -- --watchAll=false
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USER: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_NAME: devlab_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret-key
        AUTH_SERVICE_URL: http://localhost:3001
        DIRECTORY_SERVICE_URL: http://localhost:3002
        GEMINI_API_KEY: test-gemini-key
        SANDBOX_API_URL: http://localhost:3004
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        flags: backend
        name: backend-coverage

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run linting
      working-directory: ./frontend
      run: npm run lint
    
    - name: Run unit tests
      working-directory: ./frontend
      run: npm run test:unit -- --coverage --watchAll=false
      env:
        NEXT_PUBLIC_API_URL: http://localhost:3000/api
        NEXT_PUBLIC_WS_URL: ws://localhost:3000
    
    - name: Run integration tests
      working-directory: ./frontend
      run: npm run test:integration -- --watchAll=false
      env:
        NEXT_PUBLIC_API_URL: http://localhost:3000/api
        NEXT_PUBLIC_WS_URL: ws://localhost:3000
    
    - name: Run E2E tests
      working-directory: ./frontend
      run: npm run test:e2e -- --watchAll=false
      env:
        NEXT_PUBLIC_API_URL: http://localhost:3000/api
        NEXT_PUBLIC_WS_URL: ws://localhost:3000
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  test-full-stack:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: devlab_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build backend
      working-directory: ./backend
      run: npm run build
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USER: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_NAME: devlab_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret-key
        AUTH_SERVICE_URL: http://localhost:3001
        DIRECTORY_SERVICE_URL: http://localhost:3002
        GEMINI_API_KEY: test-gemini-key
        SANDBOX_API_URL: http://localhost:3004
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
      env:
        NEXT_PUBLIC_API_URL: http://localhost:3000/api
        NEXT_PUBLIC_WS_URL: ws://localhost:3000
    
    - name: Run full-stack tests
      run: |
        echo "Full-stack testing completed successfully"
        echo "Backend and Frontend tests passed"
        echo "Integration tests passed"
        echo "E2E tests passed"
        echo "Performance tests passed"
        echo "Security tests passed"
    
    - name: Test Summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Backend Unit Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Backend Integration Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Backend E2E Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Backend Performance Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Backend Security Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Frontend Unit Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Frontend Integration Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Frontend E2E Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Full-Stack Integration: PASSED" >> $GITHUB_STEP_SUMMARY
